package com.example.finalproject.data;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

/**
 * SearchTerm represents a search word with its word and definition.
 * <p>
 * This class is used to store information about a search word, including the word itself,
 * its definition.
 * <p>
 * The class is annotated with Room annotations (@Entity) to specify the database table name
 * and column information for Room database operations.
 *
 */
@Entity(tableName = "search_word")
public class SearchWord {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name="id")
    long id;
    @ColumnInfo(name="WordColumn")
    protected String word;

    @ColumnInfo(name="DefinitionColumn")
    protected String definition;

    /**
     * Default constructor for Room database operations.
     */
    public  SearchWord(){}

    /**
     * Constructor to create a new instance of SearchWord.
     * <p>
     * This constructor initializes a SearchWord object with a specific word and its corresponding definition.
     * It is used to create a new entry representing a word and its definition in the context of a dictionary or a word-based database.
     * <p>
     * Note: The 'id' field, which is the primary key, is set to be auto-generated by the Room database, and hence is not included as a parameter in this constructor.
     *
     * @param word       The search word to be stored. It represents the word that is being defined or explained.
     * @param definition The definition of the search word. This is a descriptive text that explains the meaning or context of the word.
     */
    public SearchWord(String word, String definition) {
        this.word = word;
        this.definition = definition;
    }

    /**
     * Gets the unique identifier for this SearchWord instance.
     * <p>
     * This method returns the ID of the SearchWord, which is the primary key in the database.
     * It is auto-generated by the Room database when the SearchWord is created.
     *
     * @return The unique ID of this SearchWord.
     */
    public long getId() {
        return id;
    }

    /**
     * Sets the unique identifier for this SearchWord instance.
     * <p>
     * This method is used to assign a unique ID to the SearchWord, generally used by the Room database
     * for database operations. It is not commonly used directly in application code.
     *
     * @param id The unique ID to be set for this SearchWord.
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * Retrieves the word associated with this SearchWord instance.
     * <p>
     * This method returns the word part of the SearchWord, representing the term that is being defined.
     *
     * @return The word part of this SearchWord.
     */
    public String getWord() {
        return word;
    }

    /**
     * Sets the word for this SearchWord instance.
     * <p>
     * This method assigns a new word to the SearchWord. It changes the term that is being defined.
     *
     * @param word The word to be set for this SearchWord.
     */
    public void setWord(String word) {
        this.word = word;
    }

    /**
     * Retrieves the definition of the word in this SearchWord instance.
     * <p>
     * This method returns the definition part of the SearchWord, providing the explanation or meaning
     * of the associated word.
     *
     * @return The definition of the word in this SearchWord.
     */
    public String getDefinition() {
        return definition;
    }

    /**
     * Sets the definition for the word in this SearchWord instance.
     * <p>
     * This method assigns a new definition to the word in the SearchWord. It updates the explanatory
     * text associated with the word.
     *
     * @param definition The definition to be set for the word in this SearchWord.
     */
    public void setDefinition(String definition) {
        this.definition = definition;
    }

}
